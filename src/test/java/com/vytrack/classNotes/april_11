Today is April 11, 2020

April 12 - Holiday, no class.

Tuesday - review excel + writing data into excel file.
Wednesday

Agenda:
BDD, TDD and DDT
Cucumber BDD
############

Java - to write a code
Intellij IDE - where we write a code
Maven - project builder tool
Selenium WebDriver - tool for automating web-based applications.
TestNG - unit, system and e2e testing framework.


Behavior Driven Development (BDD)
Test Driven Development (TDD)
Behavior Driven Testing (BDT)

They are both about development and automated testing.

In both cases, tests will be written before development process/code implementation.

In case of TDD, we are dealing with raw code.

In case of BDD/BDT = it's about testing the functionality from end-user perspective. So we are not dealing with raw code.

BDD it's about UI point of view.

BDD != TDD


Java unit testing tools/frameworks: TestNG and JUnit.

To implement BDD in our test automation framework we gonna use Cucumber BDD.

Official website: https://cucumber.io/

Right click on src/test/java:

create a package: com.vytrack

Right click on vytrack --> new -> package:
pages
utilities
runners
step_definitions


Right click on src/test --> new --> directory --> resources

right click on resources folder --> mark as --> test resources root folder

Right click on src/test/resources --> new --> directory --> features


package com.vytrack.runners;

import io.cucumber.junit.Cucumber;
import io.cucumber.junit.CucumberOptions;
import org.junit.runner.RunWith;

@RunWith(Cucumber.class)
@CucumberOptions(
glue = "com/vytrack/step_definitions",
features = "src/test/resources/features"
)
public class CucumberRunner {


}
#####These 2 parameters are mandatory!#######

glue - path to the package with step definition methods.

features - path to the folder/directory with feature files.

mac - preferences
windows - settings


REMEMBER!!! DON'T ADD SUBSTEPS PLUGIN! IF YOU HAVE IT - DELETE IT!



You need 2 plugins only:

Cucumber for Java -- by JetBrains
Gherkin -- by JetBrains


After installation, restart an Intellij.

then ,all your feature files will have a green icon

if feature file icon is blue - delete substeps plugin

If feature file icon is gray, even after installing plugins:


Check Settings->Editor->File Types. Verify that Cucumber Scenario is set to a Registered Pattern of *.feature.

command + option + esc - force quit some program
control + alt + delete - right on program --> end task

How do we create feature files??


Right click on the features directory --> new --> file --> *.feature

#### User Gherkin by JetBrains


There is a chance that you intellij version is too old, and plugin cannot be installed. So you need to update intellij first.

1. Create a feature file.
2. Write scenario
3. Go to runner class and perform dry run
4. Copy from terminal unimplemented step definitions and paste them in step definition class.


You can implement missing steps with the snippets below:

@Given("user is on the login page")
public void user_is_on_the_login_page() {
// Write code here that turns the phrase above into concrete actions
throw new io.cucumber.java.PendingException();
}

@When("user logs in as a sales manager")
public void user_logs_in_as_a_sales_manager() {
// Write code here that turns the phrase above into concrete actions
throw new io.cucumber.java.PendingException();
}

@Then("user should verify that title is a Dashboard")
public void user_should_verify_that_title_is_a_Dashboard() {
// Write code here that turns the phrase above into concrete actions
throw new io.cucumber.java.PendingException();
}



Process finished with exit code 0



WARNING: No features found at - path to feature files folder in the cucumber runner class is not correct.

dry Run - to make sure that every test step has a code implementation. If no, cucumber will throw step definition snippets into console.


DELETE ALL COMMENTS FROM FEATURE FILE FOR NOW


If some steps don't have a code implementation yet, cucumber will throw:

io.cucumber.junit.UndefinedStepException Some step is undefined. You can implement it using the snippet(s) below:


If you already implemented steps and performing dry run, cucumber will show you that scenarios were skipped.

strict - true if undefined and pending steps should be treated as errors.

dryRun - true if glue code execution should be skipped.

dryRun = false - execute test
dryRun = true - DON'T execute test, check if every step is implemented.

Remove pending exception from auto-generated step definition.


make sure that you don't have step definitions with the description. Otherwise, cucumber will throw some kind of exception: ambiguous step definitions


Update intellij and update all plugins then latest cucumber version will work fine.

